{
    "contents" : "##' Plot REmap in knitr\n##'\n##' @description\n##' Function for plotting REmap in knitr\n##'\n##'\n##'\n##' @param objct  an REmap object for plotting\n##' @param height  height for the DOM of REmap\n##' @param width   width for the DOM of REmap\n##'\n##' @details\n##' After using the remap.init function, you can use this function\n##' for plotting REmap in knitr in any chuck\n##'\n##' @examples\n##' library(REmap)\n##' out = remap(demoC)\n##' knitrREmap(out)\n\n\n\n\n\nknitrREmap = function(object,\n                      height = \"300px\",\n                      width = \"100%\",\n                      local = F){\n\n\n  if(.Platform$OS.type == \"windows\"){\n    locate = Sys.getlocale(\"LC_CTYPE\")\n    Sys.setlocale(\"LC_CTYPE\",\n                  \"chs\")\n #   local = T\n  }\n\n    if(local){\n    # if(!dir.exists(\"js\")){\n      dir.create(\"js\")\n    # }\n  }\n\n  if(object@maptype == \"Bmap\"){\n\n    foot = sub(\"optionNameData\",\n               paste0(\"option\", object@id), html.knitr.list$Bmap.foot)\n    ##write Bmap content\n    content = paste0(html.knitr.list$Bmap.head,\n                     object@option,\n                     foot)\n\n\n    content = sub(\"#main\",\n                  paste0(\"#\",object@id)\n                   ,content)\n\n\n  }else if(object@maptype == \"SVG\"){\n    head = sub(\"optionNameData\",\n               paste0(\"option\", object@id), html.knitr.list$SVG.head)\n\n    foot = sub(\"optionNameData\",\n               paste0(\"option\", object@id), html.knitr.list$SVG.foot)\n\n    ## write SVG content\n    content = paste0(head,\n                     object@option,\n                     foot)\n\n    content = sub(\"main\",\n                   object@id\n                   ,content)\n\n  }else if(object@maptype == \"SVGH\"){\n\n    foot = sub(\"optionNameData\",\n               paste0(\"option\", object@id), html.knitr.list$SVGH.foot)\n\n      ## write SVG content\n      content = paste0(html.knitr.list$SVGH.head,\n                       object@option,\n                       foot)\n\n      content = sub(\"main\",\n                    object@id\n                    ,content)\n\n  }\n\n\n\n  if(local){\n    file_name = paste0(object@id,\".js\")\n    writeLines(content,\n               paste0(\"js/\",file_name),\n               useBytes = T)\n  }\n\n  if(.Platform$OS.type == \"windows\"){\n    Sys.setlocale(\"LC_CTYPE\",locate)\n  }\n\n\n  if(local){\n\n  htmltools::tagList(\n    ### initial for echarts svg\n    htmltools::tag(\"div\",list(\n      id = object@id,\n      style = sprintf(\"height:%s; width:%s\",height,width))),\n\n\n    htmltools::tag(\"script\",list(\n      src = sprintf(\"js/%s.js\",object@id))))\n\n  }else{\n\n    htmltools::tagList(\n      ### initial for echarts svg\n      htmltools::tag(\"div\",list(\n        id = object@id,\n        style = sprintf(\"height:%s; width:%s\",height,width))),\n\n\n      htmltools::tag(\"script\",list(\n        content)))\n\n\n\n  }\n\n}\n\n\n\nhtml.knitr.list = list(Bmap.head = \"\",\n                       Bmap.foot = \"\nvar myChart = BMapExt.initECharts(container);\n                       window.onresize = myChart.onresize;\n                       BMapExt.setOption(optionNameData);\n                       }\n);\n                       })();\",\n                       SVG.head = \"  var myChart = echarts.init(document.getElementById(\\\"main\\\"));\n\n                       var optionNameData = \",\n                       SVG.foot = \";\n  myChart.setOption(optionNameData);\t\",\n                       SVGH.head =\n    \"  var myChart = echarts.init(document.getElementById(\\\"main\\\"));\",\n                       SVGH.foot = \";\n  myChart.setOption(optionNameData);\t\"\n)\n",
    "created" : 1458649226098.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "373929780",
    "id" : "F9185B63",
    "lastKnownWriteTime" : 1458649735,
    "path" : "E:/git/REmap/R/knitrREmap.R",
    "project_path" : "R/knitrREmap.R",
    "properties" : {
    },
    "relative_order" : 7,
    "source_on_save" : false,
    "type" : "r_source"
}